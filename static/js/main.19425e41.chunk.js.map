{"version":3,"sources":["components/Card.js","components/CardArray.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardArray","robots","length","map","user","SearchBox","searchChange","Fragment","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","useState","searchValue","setSearchValue","setRobots","useEffect","fetch","then","response","json","filteredRobots","filter","robot","toLowerCase","includes","undefined","CircularProgress","color","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sNAWeA,EATF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,GAAGC,EAAc,EAAdA,KAAKC,EAAS,EAATA,MACnB,OACI,sBAAKC,UAAU,8DAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,iBAA6CK,IAAI,UACzD,6BAAKJ,IACL,4BAAIC,QCYDI,EAhBG,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAEhB,OAAmB,IAAhBA,EAAOC,OACE,mBAAGL,UAAU,iBAAb,6BAGR,8BAEQI,EAAOE,KAAI,SAACC,GACZ,OAAO,cAAC,EAAD,CAAoBV,GAAIU,EAAKV,GAAIC,KAAMS,EAAKT,KAAMC,MAASQ,EAAKR,OAArDQ,EAAKV,UCCxBW,EAVG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAChB,OACI,cAAC,IAAMC,SAAP,UACI,qBAAKV,UAAU,MAAf,SACC,uBAAOA,UAAU,mCAAmCW,KAAK,SAASC,YAAY,4BAA4BC,SAAUJ,SCGlHK,EARA,SAACC,GACZ,OACI,cAAC,IAAML,SAAP,UACI,qBAAKM,MAAO,CAACC,UAAU,SAAUC,OAAQ,oBAAqBC,OAAQ,SAAtE,SACKJ,EAAMK,c,8BCgBRC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAM,CACPC,UAAS,GAHC,E,qDAMlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SACF,uFAEDG,KAAKX,MAAMK,a,GAfFQ,a,gBCgDbC,EA1CJ,WACP,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAS,IAArC,mBAAO1B,EAAP,KAAe6B,EAAf,KAIAC,qBAAU,WACNC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAhC,GAAM,OAAI6B,EAAU7B,QAC5B,IAEF,IAAMmC,EAAiBnC,EAAOoC,QAAO,SAACC,GAClC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASZ,EAAYW,kBAIzD,OAAmB,IAAhBtC,EAAOC,aAAuBuC,IAATxC,EACZ,qBAAKJ,UAAU,SAAf,SACI,cAAC6C,EAAA,EAAD,CAAkBC,MAAM,gBAMhC,cAAC,IAAMpC,SAAP,UACI,sBAAKV,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWS,aAxBP,SAACsC,GAAD,OAAOf,EAAee,EAAEC,OAAOC,UAyBnC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAW7C,OAAQmC,cC3BhCW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.19425e41.chunk.js","sourcesContent":["import React from 'react';\r\n//Basic card component\r\nconst Card = ({id,name,email})=>{\r\n    return(\r\n        <div className=\"bg-light-green tc grow pointer br3 bw2 dib pa3 ma3 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt='Robot'/>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardArray = ({robots})=>{\r\n\r\n    if(robots.length===0){\r\n        return (<p className=\"tc white mt-10\">No result found</p>)\r\n    }\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user)=>{\r\n                return <Card key={user.id} id={user.id} name={user.name} email = {user.email}/>;\r\n                })\r\n            }\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default CardArray;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchChange})=>{\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"pa3\">\r\n             <input className=\"pa2 bg-light-blue ba b--blue br2\" type=\"search\" placeholder=\"Search your Robot Friends\" onChange={searchChange}/>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{overflowY:'scroll', border: '1px solid #96ccff', height: '800px'}}>\r\n                {props.children}\r\n            </div>\r\n        </React.Fragment>);\r\n}\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return (<h1>Ooops, we ran into a problem. Couldn't get the robots</h1>);\r\n        }else{\r\n            return this.props.children;\r\n        }   \r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React,{useEffect,useState} from 'react';\r\nimport CardArray from '../components/CardArray.js';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport Scroll from '../components/Scroll.js';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst App =() => {\r\n    const [searchValue, setSearchValue] = useState(\"\"); \r\n    const [robots, setRobots] = useState([]);\r\n\r\n    const searchEntry = (e) => setSearchValue(e.target.value) ;\r\n\r\n    useEffect(()=>{\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(robots => setRobots(robots))\r\n    },[]);\r\n\r\n    const filteredRobots = robots.filter((robot)=>{\r\n        return robot.name.toLowerCase().includes(searchValue.toLowerCase());\r\n    });\r\n\r\n\r\n    if(robots.length===0 || robots===undefined){\r\n        return (<div className=\"center\">\r\n                    <CircularProgress color=\"secondary\" />\r\n                </div>);\r\n    }\r\n\r\n    else{\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"tc\">\r\n                    <h1>RoboFriends</h1>\r\n                    <SearchBox searchChange={searchEntry}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardArray robots={filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>   \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons'\r\n\r\n\r\nReactDOM.render(<App/> ,document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}